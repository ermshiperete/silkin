<?xml version="1.1" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <Properties>
    <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
      <Color blue="cc" green="ff" red="ff" type="rgb"/>
    </Property>
  </Properties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="2"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" attributes="0">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" attributes="0">
                      <EmptySpace max="-2" attributes="0"/>
                      <Component id="jScrollPane1" min="-2" pref="600" max="-2" attributes="0"/>
                  </Group>
                  <Group type="102" alignment="0" attributes="0">
                      <EmptySpace min="-2" pref="162" max="-2" attributes="0"/>
                      <Component id="jLabel1" min="-2" pref="300" max="-2" attributes="0"/>
                  </Group>
              </Group>
              <EmptySpace max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Component id="jLabel1" min="-2" pref="24" max="-2" attributes="0"/>
              <EmptySpace type="unrelated" max="-2" attributes="0"/>
              <Component id="jScrollPane1" min="-2" pref="279" max="-2" attributes="0"/>
              <EmptySpace pref="32" max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
      <Properties>
        <Property name="viewportView" type="java.awt.Component" editor="org.netbeans.modules.form.ComponentChooserEditor">
          <ComponentRef name="helpTextArea"/>
        </Property>
      </Properties>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Component class="javax.swing.JTextArea" name="helpTextArea">
          <Properties>
            <Property name="columns" type="int" value="20"/>
            <Property name="rows" type="int" value="5"/>
            <Property name="text" type="java.lang.String" value="EDITING PREFERENCES for a particular context controls the LEARNING  &#xa;MODULE (the part of SILKin that makes Suggestions). For more &#xa;information about the Learning Module and how SILKin makes Suggestions, &#xa;see &apos;Help - Suggestions.&apos;&#xa;&#xa;Once you have set the preferences, they are saved in the SILK file and apply &#xa;only to that file. If you create a new context (i.e. a different language), you &#xa;must set the Preferences for it.&#xa;&#xa;You can EXPERIMENT with these parameters. For example: after you gather &#xa;a fair number of dyads you click on &quot;Get New Suggestions&quot; and get just a&#xa;few proposed definitions for your kin terms. You wonder if you would have&#xa;gotten more (or better) suggestions with different learning parameters. So&#xa;you change a few parameters and then click &quot;Get New Suggestions&quot; again.&#xa;If you like the results, you can leave the new parameter settings alone and&#xa;work with this set of Suggestions. If you don&apos;t like the result, you can put&#xa;the settings back where they were and click &quot;Get New Suggestions&quot; again.&#xa;This will recreate the original set of Suggestions.&#xa;&#xa;** Ignorable Percentage&#xa;This parameter controls how many dyads SILKin can ignore as &quot;probable errors&quot;&#xa;when fitting your data to a definition found in the system Library. If you set&#xa;this to 5% (the default value), then if 95% of your data matches a Library pattern&#xa;and 5% does not match, SILKin will suggest that this definition may be correct&#xa;in your context. SILKin will not ask you to correct the 5% that don&apos;t match; it&#xa;just ignores them.&#xa;&#xa;If you set the Ignorable Percentage very low, then it will take a LOT of correct &#xa;dyads to overcome just a few erroneous dyads. This will stop SILKin from&#xa;making Suggestions until you have gathered a lot of dyads; this could waste&#xa;your efforts.&#xa;&#xa;If you set the Ignorable Percentage very high, then SILKin might ignore a &#xa;substantial number of dyads in proposing a definition. And those mis-fit&#xa;dyads could be correctly indicating that the Library definition is not a good&#xa;fit. SILKin could be too quick to make Suggestions. &#xa;&#xa;** Max Percentage&#xa;This parameter controls how quickly SILKin may suggest that some of your&#xa;dyads are wrong and should be corrected. If you set this to 25% (the default&#xa;value) SILKin will never assume that a group of dyads are wrong if they&#xa;constitute 25% or more of your data for that kin term. For example: if 80%&#xa;of your data fits a Library pattern, the 20% misfits are too many to ignore.&#xa;But SILKin will consider pointing out the 20% and asking you to verify their&#xa;accuracy. If you verify (confirm) a particular dyad as correct, SILKin will&#xa;never question it again (so be sure before you confirm).&#xa;&#xa;If you set Max Percentage very low, then in the early stages of data &#xa;gathering a few erroneous dyads could stop SILKin from proposing the &#xa;correct definition; they will be too high a percentage of your data to be&#xa;challenged. This will slow down SILKin&apos;s search for a definition and slow&#xa;down the discovery of legitimate errors.&#xa;&#xa;If you set Max Percentage very high, then it will be very quick to challenge&#xa;your dyads (even correct ones) based on partial matches to Library patterns.&#xa;This could waste your time confirming data that is correct.&#xa;&#xa;** Do Sub-Pattern Matches&#xa;By default, this parameter is set to &apos;false&apos; (i.e. no check-mark). When you &#xa;first begin gathering dyads, you are hoping that your data will match some &#xa;definitions in the Library perfectly. If that happens, then it may be useful to &#xa;read about the culture whose definition also fits your context. You may gain &#xa;insights about your own target culture (context) by comparing it to the &#xa;Library context that contributed a definition.&#xa;&#xa;If you have gathered a lot of dyads for a particular kin term and SILKin has &#xa;not found any matches for that kin term with Library definitions, then perhaps&#xa;your context has a unique pattern. But it is also possible that in your context&#xa;the definition of your kin term is a combination of some definitions that can&#xa;be found in the Library. (Perhaps your context has the concept of &apos;sibling&apos; but&#xa;the Library only has patterns for &apos;brother&apos; or &apos;sister.&apos;) &#xa;&#xa;When Sub-Pattern Matches is &apos;true&apos; SILKin will try to &apos;piece together&apos; a definition&#xa;of your kin term using components of definitions in the Library. This is often&#xa;successful. BUT the pieced-together definition may be just what you need, or&#xa;it may be a cumbersome monstrosity.&#xa;&#xa;You should not check this box until you believe you have some unique kin &#xa;terms in your context that do not match any definition in the Library. Of&#xa;course, you can experiment with this parameter; see what happens if you&#xa;check it and then &quot;Get New Suggestions.&quot; If you don&apos;t like what you get, &#xa;un-check it and recreate the original Suggestions.&#xa;&#xa;** Do Pure Induction&#xa;By default, this parameter is set to &apos;false&apos; (i.e. no check-mark). &#xa;Sometimes SILKin cannot find an exact match between the data in your context &#xa;and a Library definition, and can&apos;t even piece one together using components &#xa;of Library definitions. If this parameter is checked, SILKin will try one last&#xa;strategy: it will construct a definition from your data. This is a desperate&#xa;measure, and often results in an unneccesarily complex definition. &#xa;&#xa;A definition produced by Pure Induction might be unusable by iteslf, but&#xa;could show you your data in a new form (i.e. Horn Clauses). That new&#xa;view may give you some ideas or insights. &#xa;&#xa;Generally you should not check this parameter until you have given up&#xa;on all the other learning strategies SILKin employs.&#xa;&#xa;** Polygamy&#xa;A few Library definitions only work with multiple spouses (e.g. co-wife). If&#xa;you know that polygamy is recognized in your context, checking this &#xa;paramenter can help SILKin look for suitable definitions. It will not restrict&#xa;SILKin&apos;s search to ONLY polygamous definitions, but it will allow them."/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Component class="javax.swing.JLabel" name="jLabel1">
      <Properties>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="Arial Black" size="18" style="1"/>
        </Property>
        <Property name="horizontalAlignment" type="int" value="0"/>
        <Property name="text" type="java.lang.String" value="Editing Preferences"/>
      </Properties>
    </Component>
  </SubComponents>
</Form>
