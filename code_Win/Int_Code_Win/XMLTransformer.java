
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.stream.StreamSource;
import javax.xml.transform.stream.StreamResult;
import java.io.*;

/**This class defines the XML-to-HTML transformer that can read in a SILK
 * file and output an HTML file formatted according to an XSL style sheet.
 *
 * The basic code is modeled after the Oracle (Sun) Java tutorial example
 * called "Stylizer.java" associated with the lesson "Transforming XML Data with
 * XSLT" in "Java API for XML Processing (JAXP) > Extensible Style sheet Language
 * Transformations". Their code is (c) 2006 Sun Microsystems, Inc.
 *
 *  @author		Gary Morris, Northern Virginia Community College
 *                              garymorris2245@verizon.net
 *
 * Created on Feb 24, 2011
 */
public class XMLTransformer {

    /**This method does the transformation from XML data to formatted HTML.
     * 
     * @param datafile      the XML file to be transformed
     * @param stylesheet    the XSL file specifying the transformation
     * @param outfile       the output HTML file
     */
    public void transform(File datafile, File stylesheet, File outfile) {

        try {
            TransformerFactory tFactory = TransformerFactory.newInstance();
            StreamSource stylesource = new StreamSource(stylesheet);
            Transformer transformer = tFactory.newTransformer(stylesource);
            StreamSource source = new StreamSource(datafile);
            StreamResult result = new StreamResult(outfile);
            transformer.transform(source, result);
        } catch (TransformerConfigurationException tce) {
            // Error generated by the parser
            System.out.println("\n** Transformer Factory error");
            System.out.println("   " + tce.getMessage());
            // Use the contained exception, if any
            Throwable x = tce;
            if (tce.getException() != null) {
                x = tce.getException();
            }
            x.printStackTrace();
        } catch (TransformerException te) {
            // Error generated by the parser
            System.out.println("\n** Transformation error");
            System.out.println("   " + te.getMessage());
            // Use the contained exception, if any
            Throwable x = te;
            if (te.getException() != null) {
                x = te.getException();
            }
            x.printStackTrace();
        }
    } // main
}
